name: Build binaries in each platform
on:
  push:
    branches-ignore:
      - 'main'
      - 'master'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        builds:
          - name: macos-x86_64
            os: macos-latest
            ocaml_version: 4.12.1
            opam_switch: "~/.opam/default/"
          - name: linux-x86_64
            os: ubuntu-latest
            ocaml_version: 4.12.1
            opam_switch: "~/.opam/default/"
          - name: windows-x86_64
            os: windows-latest
            ocaml_version: 4.12.1
            opam_switch: "C:\\cygwin\\home\\runneradmin\\.opam\\default\\"

    runs-on: ${{ matrix.builds.os }}

    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
        if: contains(matrix.builds.os, 'windows')

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'

      - name: Use OCaml ${{ matrix.builds.ocaml_version }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.builds.ocaml_version }}

      - name: Extract opam root
        shell: bash
        run: "eval $(opam env); echo $OPAM_SWITCH_PREFIX"
        id: switch_prefix

      - run: opam repository add satysfi-external https://github.com/gfngfn/satysfi-external-repo.git

      - run: opam repository add satyrographos-repo https://github.com/na4zagin3/satyrographos-repo.git

      - run: opam install satysfi.${{ steps.extract_branch.outputs.branch  }} -y
        env:
          OPAMUNLOCKBASE: true

      - run: opam install satysfi-dist.${{ steps.extract_branch.outputs.branch  }} -y
        env:
          OPAMUNLOCKBASE: true

      - name: Copy files
        run: |
          mkdir -p ./bin ./share
          cp -rf "${{ steps.switch_prefix }}/bin/satysfi" ./bin/
          cp -rf "${{ steps.switch_prefix }}/share/satysfi" ./share/
        if: ${{!(contains(matrix.builds.os, 'windows'))}}

      - name: Copy files
        run: |
          New-Item -ItemType "directory" -Path ".\\bin" -Force
          New-Item -ItemType "directory" -Path ".\\share" -Force
          Copy-Item -Path "${{ steps.switch_prefix }}\\bin\\satysfi"  -Destination ".\\bin"
          Copy-Item -Path "${{ steps.switch_prefix }}\\share\\satysfi"  -Destination ".\\share"
        if: contains(matrix.builds.os, 'windows')

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: build satysfi-language-server
        working-directory: ./satysfi-language-server
        run: cargo build --release

      - name: copy satysfi-language-server
        run: Copy-Item ".\\satysfi-language-server\\target\\release\\satysfi-language-server" -Destination ".\\bin"
        if: contains(matrix.builds.os, 'windows')

      - name: copy satysfi-language-server
        run: cp -rf "./satysfi-language-server/target/releasesatysfi-language-server" ./bin/
        if: ${{!(contains(matrix.builds.os, 'windows'))}}

      - name: git setting
        run: |
          git config --local user.email "yasuo@ozu.email"
          git config --local user.name "yasuo-ozu"

      - name: Commit files
        run: |
          git add bin share
          git commit -m "Update bin and share"
          git tag -f ${{matrix.builds.name}}/${{ steps.extract_branch.outputs.branch  }}
          git pull
          git push origin ${{matrix.builds.name}}/${{ steps.extract_branch.outputs.branch  }}
          git reset --hard 'HEAD^'

